name: Publish

on:
  push:
    branches: [ main, publish ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  publish:
    name: Publish
    runs-on: ubuntu-20.04

    env:
      Project_Directory: ./source/production/F0.Minesweeper.App/
      Project_File: ${{ env.Project_Directory }}F0.Minesweeper.App.csproj
      Output_Directory: ./release/
      Is_Live: ${{ github.event_name == 'push' && github.ref == 'refs/heads/publish' }}
      Is_Preview: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
      Is_Development: ${{ github.event_name == 'pull_request' }}
      Is_Experimental: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Define environment variables for Live
        if: ${{ env.Is_Live == 'true' }}
        run: |
          echo "Repository_Name=F0-Games-Minesweeper" >> $GITHUB_ENV
      - name: Define environment variables for Preview
        if: ${{ env.Is_Preview == 'true' }}
        run: |
          echo "Repository_Name=F0-Games-Minesweeper-Preview" >> $GITHUB_ENV
          echo "VersionSuffix=preview" >> $GITHUB_ENV
          echo "SourceRevisionId=${{ github.sha }}" >> $GITHUB_ENV
      - name: Define environment variables for Development
        if: ${{ env.Is_Development == 'true' }}
        run: |
          echo "Repository_Name=F0-Games-Minesweeper-Development" >> $GITHUB_ENV
          echo "VersionSuffix=development" >> $GITHUB_ENV
          echo "SourceRevisionId=${{ github.event.pull_request.head.sha }}" >> $GITHUB_ENV
      - name: Define environment variables for Experimental
        if: ${{ env.Is_Experimental == 'true' }}
        run: |
          echo "Repository_Name=F0-Games-Minesweeper-Experimental" >> $GITHUB_ENV
          echo "VersionSuffix=experimental" >> $GITHUB_ENV
          echo "SourceRevisionId=${{ github.sha }}" >> $GITHUB_ENV

      - name: Checkout
        uses: actions/checkout@v2.3.4
      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v1.8.2
      - name: Change base-tag in index.html
        run: sed -i 's/<base href="\/" \/>/<base href="\/${{ env.Repository_Name }}\/" \/>/g' ${{ env.Project_Directory }}wwwroot/index.html
      - name: Insert redirect.js into index.html
        run: sed -i '/blazor.webassembly.js/i \    <script src="redirect.js"><\/script>' ${{ env.Project_Directory }}wwwroot/index.html
      - name: Publish
        run: dotnet publish ${{ env.Project_File }} --configuration Release --nologo --output ${{ env.Output_Directory }}
      - name: Create .nojekyll file
        run: touch ${{ env.Output_Directory }}wwwroot/.nojekyll
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: ${{ env.Output_Directory }}wwwroot
          token: ${{ secrets.Deploy_F0Minesweeper }}
          git-config-name: 0x-F0
          git-config-email: 86806558+0x-F0@users.noreply.github.com
          repository-name: ${{ github.repository_owner }}/${{ env.Repository_Name }}
