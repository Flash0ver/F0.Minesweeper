name: 'Azure Pipelines'

trigger:
  batch: true
  branches:
    include:
    - main
pr:
  autoCancel: false
  branches:
    include:
    - main

variables:
  DOTNET_NOLOGO: true
  NuGet_Configuration_File: $(System.DefaultWorkingDirectory)/nuget.config
  Build_Configuration: 'Release'

jobs:
- job: code_coverage
  displayName: Code Coverage
  pool:
    vmImage: 'ubuntu-18.04'

  variables:
    Solution_File: $(System.DefaultWorkingDirectory)/source/F0.Minesweeper.sln

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      restoreArguments: '$(Solution_File)'
      feedsToUse: 'config'
      nugetConfigPath: '$(NuGet_Configuration_File)'
      verbosityRestore: 'Minimal'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: 'build'
      arguments: '$(Solution_File) --no-restore'
  - task: DotNetCoreCLI@2
    displayName: Collect code coverage metrics with Coverlet
    inputs:
      command: 'test'
      arguments: '$(Solution_File) --no-build --logger trx /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/'
      publishTestResults: false
  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFormat: 'VSTest'
      testResultsFiles: '**/*.trx'
      mergeTestResults: true
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage report
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Build.SourcesDirectory)/**/coverage.cobertura.xml'
      failIfCoverageEmpty: true

- job: mutation_testing
  displayName: Mutation Testing
  pool:
    vmImage: 'ubuntu-18.04'

  variables:
    Test_Project_Directory: $(System.DefaultWorkingDirectory)/source/test/F0.Minesweeper.Logic.Tests
    Stryker_Configuration_File: $(System.DefaultWorkingDirectory)/source/test/stryker-config.json

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Install .NET Tools
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore --configfile $(NuGet_Configuration_File)'
  - task: DotNetCoreCLI@2
    displayName: Run dotnet-stryker
    inputs:
      command: 'custom'
      custom: 'stryker'
      arguments: '--config-file-path $(Stryker_Configuration_File)'
      workingDirectory: '$(Test_Project_Directory)'
  - task: PublishMutationReport@0
    displayName: Publish Mutation Test Report
    inputs:
      reportPattern: '**/mutation-report.html'
