parameters:
- name: vmImage
  displayName: 'Agent'
  type: string
  default: 'windows-latest'

jobs:
- job: code_coverage
  displayName: Code Coverage
  pool:
    vmImage: ${{ parameters.vmImage }}

  variables:
    Solution_File: $(System.DefaultWorkingDirectory)/source/F0.Minesweeper.sln
    NuGet_Configuration_File: $(System.DefaultWorkingDirectory)/nuget.config
    Tool_Manifest_File: $(System.DefaultWorkingDirectory)/.config/dotnet-tools.json
    Coverage_Reports_Glob: $(Build.SourcesDirectory)/**/coverage.cobertura.xml
    Coverage_Report_Target_Directory: $(Build.SourcesDirectory)/TestResults/coveragereport
    Coverage_Report_Target_File: $(Build.SourcesDirectory)/TestResults/coveragereport/Cobertura.xml

  steps:
  - checkout: self
    displayName: Checkout
    fetchDepth: 1
  - task: UseDotNet@2
    displayName: Setup .NET SDK
    inputs:
      packageType: 'sdk'
      useGlobalJson: true
      performMultiLevelLookup: true
  - task: DotNetCoreCLI@2
    displayName: Install .NET Tools
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'restore --configfile $(NuGet_Configuration_File) --tool-manifest $(Tool_Manifest_File) --no-cache'
  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      restoreArguments: '$(Solution_File)'
      feedsToUse: 'config'
      nugetConfigPath: '$(NuGet_Configuration_File)'
      verbosityRestore: 'Minimal'
  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      command: 'build'
      arguments: '$(Solution_File) --no-restore --nologo'
  - task: DotNetCoreCLI@2
    displayName: Collect code coverage metrics with Coverlet
    inputs:
      command: 'test'
      arguments: '$(Solution_File) --no-build --nologo /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./TestResults/'
      publishTestResults: false
  - task: DotNetCoreCLI@2
    displayName: Merge code coverage metrics with ReportGenerator
    inputs:
      command: 'custom'
      custom: 'reportgenerator'
      arguments: '-reports:$(Coverage_Reports_Glob) -targetdir:$(Coverage_Report_Target_Directory) -reporttypes:Cobertura'
  - task: PublishCodeCoverageResults@1
    displayName: Publish code coverage report
    inputs:
      codeCoverageTool: 'Cobertura'
      summaryFileLocation: '$(Coverage_Report_Target_File)'
      failIfCoverageEmpty: true
